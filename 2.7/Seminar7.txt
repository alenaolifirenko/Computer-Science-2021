Что такое контекстное переключение задач?
Это процесс записи и восстановления состояния процесса или потока таким образом, чтобы в дальнейшем продолжить его выполнение с прерванного места.

Назовите основные подходы к организации параллелизма?
- мнимый параллелизм (переключение задач): 1 исполнитель
- истинный параллелизм (аппаратный параллелизм): н исполнителей, которыми могут быть процессоры/ядра
*Или процессы/потоки - не поняла вопрос*

Что может влиять на производительность параллельных алгоритмов?
- колво исполнителей(контектное переключение)
- конкуренция за данные(перебрасывание кэша)
- ложное разделение(строки кэша)
- локальность данных

Как в стандартной библиотеке реализована концепция асинхронного исполнения?
std::async, std::launch

Что нужно учитывать при замене последовательной реализации алгоритма на параллельную?
Объем вычислений. При простых операциях ожидание основной памяти долгое, потому последовательная версия может обогнать параллельную
