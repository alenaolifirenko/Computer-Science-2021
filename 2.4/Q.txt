1. Как организован механизм генерации случайных чисел в библиотеке random?
seed(устанавливает начальное положение),
генератор генерирует случайно ЗНАЧЕНИЕ [0, int_max], 
распределение (равномерное,Бернулли, нормальное и тд),
получаем случайное ЧИСЛО

2. Чем отличаются функциональные объекты от функций и лямбда-выражений?
Функциональные объекты:
- состояние у ФО - данные члена
- разные типы
- передача как данные (по ссылке, перемещение и тд)
Функции: 
- состояние - static переменная, global переменная, аргумент по ссылке
- один тип[0, int_max]
- передача через указатель
Лямбды:
- состояние - список захвата[]
- тип auto, std::function

3. Какими наборами возможностей обладают итераторы различных категорий?
Input_Iterator(на чтение) {=, ==, ++, ->, *, !=}
Output_Iterator(на запись) {=, ==, ++, ->, *, !=}
Forward_Iterator {II, OI, многопроходность}
Bedirecsion_Iterator {FI, --}
Random_Access_Iteratot {BI, +n, -n, <, >, <=, >=, i2-i1, [n]}

4. Какая классификация предлагается для стандартой библиотеки?
- немодифицирующие алгоритмы
- модифицирующие алгоритмы
- алгоритмы удаления
- алгоритмы перестановки
- алгоритмы сортировки
- алгоритмы для упорядоченных диапазонов
- численные алгоритмы

5. Почему алгоритмы стандартной библиотеки предпочтительнее собственных?
Читабельность кода, меньшая вероятность ошибки, иногда быстрее и эффективнее