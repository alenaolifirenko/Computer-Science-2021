1. Почему класс std::string имеет много перегруженных функций-членов?
std::string - специализация std::basic_string.
Класс std::string монолитный (класс бога).
Он имеет много перегруженных функций-членов, т.к. конструировался с целью универсальности.
Но это противоречит концепции ООП.

2. Как осуществляется интернационализация и локализация программы?
i18n, l10n
- Boost работает с набором символов (тексты, буквы)
- класс std::locale с форматами чисел, единицами измерения и другими национальными стандартами

3. Чем отличаются многобайтовые кодировки от широких кодировок?
- широкие кодировки : char32_t для UTF-32 (32 бита на символ)
- многобайтовые кодировки : UTF-8 (состоит из октетов, 1-4 байта)
Многобайтовые экономят память, а широкие более удобные для программ (выше производительность)

4. Какие компоненты входят в стандарт кодирования символов в Unicod?
1) UCS - universal character set (таблица)
2) UTF - universal transformation format (набор кодировок)

5. Для решения каких задач удобно использовать регулярные выражения?
Когда в тексте необходимо найти фрагменты, удовлятворяющию некоторым свойствам-паттерну.